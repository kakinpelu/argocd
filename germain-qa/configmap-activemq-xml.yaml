apiVersion: v1
data:
  configData: "<!--\n    Licensed to the Apache Software Foundation (ASF) under one
    or more\n    contributor license agreements.  See the NOTICE file distributed
    with\n    this work for additional information regarding copyright ownership.\n
    \   The ASF licenses this file to You under the Apache License, Version 2.0\n
    \   (the \"License\"); you may not use this file except in compliance with\n    the
    License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n
    \   Unless required by applicable law or agreed to in writing, software\n    distributed
    under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES
    OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for
    the specific language governing permissions and\n    limitations under the License.\n-->\n<!--
    START SNIPPET: example -->\n<beans\n  xmlns=\"http://www.springframework.org/schema/beans\"\n
    \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd\n  http://activemq.apache.org/schema/core
    http://activemq.apache.org/schema/core/activemq-core.xsd\">\n\n    <!-- Allows
    us to use system properties as variables in this configuration file -->\n    <bean
    class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n
    \       <property name=\"locations\">\n            <value>file:${activemq.conf}/credentials.properties</value>\n
    \       </property>\n    </bean>\n\n   <!-- Allows accessing the server log -->\n
    \   <bean id=\"logQuery\" class=\"io.fabric8.insight.log.log4j.Log4jLogQuery\"\n
    \         lazy-init=\"false\" scope=\"singleton\"\n          init-method=\"start\"
    destroy-method=\"stop\">\n    </bean>\n\n    <!--\n        The <broker> element
    is used to configure the ActiveMQ broker.\n    -->\n    <broker xmlns=\"http://activemq.apache.org/schema/core\"
    brokerName=\"localhost\" dataDirectory=\"${activemq.data}\" persistent=\"false\">\n\n
    \       <destinationPolicy>\n            <policyMap>\n              <policyEntries>\n
    \               <policyEntry topic=\">\" >\n                    <!-- The constantPendingMessageLimitStrategy
    is used to prevent\n                         slow topic consumers to block producers
    and affect other consumers\n                         by limiting the number of
    messages that are retained\n                         For more information, see:\n\n
    \                        http://activemq.apache.org/slow-consumer-handling.html\n\n
    \                   -->\n                  <pendingMessageLimitStrategy>\n                    <constantPendingMessageLimitStrategy
    limit=\"1000\"/>\n                  </pendingMessageLimitStrategy>\n                </policyEntry>\n\n
    \               <policyEntry queue=\"apm.action\" producerFlowControl=\"true\"
    memoryLimit=\"256mb\">\n                    <pendingQueuePolicy>\n                        <vmQueueCursor/>\n
    \                   </pendingQueuePolicy>\n                </policyEntry>\n                <policyEntry
    queue=\"apm.analytics\" producerFlowControl=\"true\" memoryLimit=\"256mb\">\n
    \                   <pendingQueuePolicy>\n                        <vmQueueCursor/>\n
    \                   </pendingQueuePolicy>\n                </policyEntry>\n                <policyEntry
    queue=\"apm.rtm\" producerFlowControl=\"true\" memoryLimit=\"1024mb\">\n                    <pendingQueuePolicy>\n
    \                       <vmQueueCursor/>\n                    </pendingQueuePolicy>\n
    \               </policyEntry>\n                <policyEntry queue=\"apm.session\"
    producerFlowControl=\"true\" memoryLimit=\"256mb\">\n                    <pendingQueuePolicy>\n
    \                       <vmQueueCursor/>\n                    </pendingQueuePolicy>\n
    \               </policyEntry>\n                <policyEntry queue=\"apm.storage\"
    producerFlowControl=\"true\" memoryLimit=\"1024mb\">\n                    <pendingQueuePolicy>\n
    \                       <vmQueueCursor/>\n                    </pendingQueuePolicy>\n
    \               </policyEntry>\n                <policyEntry queue=\"apm.storage.analytics\"
    producerFlowControl=\"true\" memoryLimit=\"256mb\">\n                    <pendingQueuePolicy>\n
    \                       <vmQueueCursor/>\n                    </pendingQueuePolicy>\n
    \               </policyEntry>\n                  \n              </policyEntries>\n
    \           </policyMap>\n        </destinationPolicy>\n\n\n        <!--\n            The
    managementContext is used to configure how ActiveMQ is exposed in\n            JMX.
    By default, ActiveMQ uses the MBean server that is started by\n            the
    JVM. For more information, see:\n\n            http://activemq.apache.org/jmx.html\n
    \       -->\n        <managementContext>\n            <managementContext createConnector=\"false\"/>\n
    \       </managementContext>\n\n        <!--\n            Configure message persistence
    for the broker. The default persistence\n            mechanism is the KahaDB store
    (identified by the kahaDB tag).\n            For more information, see:\n\n            http://activemq.apache.org/persistence.html\n
    \       -->\n        <persistenceAdapter>\n            <kahaDB directory=\"${activemq.data}/kahadb\"/>\n
    \       </persistenceAdapter>\n\n\n          <!--\n            The systemUsage
    controls the maximum amount of space the broker will\n            use before disabling
    caching and/or slowing down producers. For more information, see:\n            http://activemq.apache.org/producer-flow-control.html\n
    \         -->\n          <systemUsage>\n            <systemUsage>\n                <memoryUsage>\n
    \                   <memoryUsage percentOfJvmHeap=\"70\" />\n                </memoryUsage>\n
    \               <storeUsage>\n                    <storeUsage limit=\"2 gb\"/>\n
    \               </storeUsage>\n                <tempUsage>\n                    <tempUsage
    limit=\"1 gb\"/>\n                </tempUsage>\n            </systemUsage>\n        </systemUsage>\n\n
    \       <!--\n            The transport connectors expose ActiveMQ over a given
    protocol to\n            clients and other brokers. For more information, see:\n\n
    \           http://activemq.apache.org/configuring-transports.html\n        -->\n
    \       <transportConnectors>\n            <!-- DOS protection, limit concurrent
    connections to 1000 and frame size to 100MB -->\n            <transportConnector
    name=\"openwire\" uri=\"tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\n
    \           <transportConnector name=\"amqp\" uri=\"amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\n
    \           <transportConnector name=\"stomp\" uri=\"stomp://0.0.0.0:61613?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\n
    \           <transportConnector name=\"mqtt\" uri=\"mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\n
    \           <transportConnector name=\"ws\" uri=\"ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\n
    \       </transportConnectors>\n\n        <!-- destroy the spring context on shutdown
    to stop jetty -->\n        <shutdownHooks>\n            <bean xmlns=\"http://www.springframework.org/schema/beans\"
    class=\"org.apache.activemq.hooks.SpringContextHook\" />\n        </shutdownHooks>\n\n
    \       <plugins>\n                <statisticsBrokerPlugin/>\n        </plugins>\n\n
    \   </broker>\n\n    <!--\n        Enable web consoles, REST and Ajax APIs and
    demos\n        The web consoles requires by default login, you can disable this
    in the jetty.xml file\n\n        Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml
    for more details\n    -->\n    <import resource=\"jetty.xml\"/>\n\n</beans>\n<!--
    END SNIPPET: example -->\n"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: activemq-xml
